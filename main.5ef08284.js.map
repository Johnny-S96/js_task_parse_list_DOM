{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelector","convertStringToNumber","string","Number","slice","split","join","sortList","list","listItems","children","sort","current","next","dataset","salary","append","getEmployees","map","listChild","name","innerText"],"mappings":";AAAA,aA6BA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BA,IAAMA,EAAYC,SAASC,cAAc,MAEnCC,EAAwB,SAAAC,GAC5BC,OAAAA,OAAOD,EAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAK,MAGnCC,EAAW,SAAAC,GACTC,IAAAA,EAAgBD,EAAAA,EAAKE,UAE3BD,EAAUE,KAAK,SAACC,EAASC,GACvBZ,OAAAA,EAAsBY,EAAKC,QAAQC,QACjCd,EAAsBW,EAAQE,QAAQC,UAG1CjB,EAAUkB,OAAVlB,MAAAA,EAAoBW,EAAAA,KAGhBQ,EAAe,SAAAT,GACZ,OAAA,EAAIA,EAAKE,UAAUQ,IAAI,SAAAC,GAC5B,OAAA,EAAA,CACEC,KAAMD,EAAUE,WACbF,EAAUL,YAKnBP,EAAST,GACTmB,EAAanB","file":"main.5ef08284.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = document.querySelector('ul');\n\nconst convertStringToNumber = string => (\n  Number(string.slice(1).split(',').join(''))\n);\n\nconst sortList = list => {\n  const listItems = [...list.children];\n\n  listItems.sort((current, next) => (\n    convertStringToNumber(next.dataset.salary)\n    - convertStringToNumber(current.dataset.salary)\n  ));\n\n  employees.append(...listItems);\n};\n\nconst getEmployees = list => {\n  return [...list.children].map(listChild => {\n    return {\n      name: listChild.innerText,\n      ...listChild.dataset,\n    };\n  });\n};\n\nsortList(employees);\ngetEmployees(employees);\n"]}